<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
	http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.eventManagement</groupId>
	<artifactId>eventManagement</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>event Management</name>
	<url>http://maven.apache.org</url>
	<properties>
	   <aspectj.version>1.8.1</aspectj.version>
		<jdk.version>1.7</jdk.version>
		  <java.version>1.7</java.version>
		<spring.version>4.1.1.RELEASE</spring.version>
		<jstl.version>1.2</jstl.version>
		<junit.version>4.11</junit.version>
		<logback.version>1.0.13</logback.version>
		<jcl-over-slf4j.version>1.7.5</jcl-over-slf4j.version>
		 <spring.profiles>dev</spring.profiles>
        <database.url>mysql://root:mysql@jdbc:mysql://localhost:3306/eventmanagement</database.url>
	</properties>

	<dependencies>
	<!-- by heroku -->
	 <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>
		 <dependency>
	      <groupId>com.sparkjava</groupId>
	      <artifactId>spark-core</artifactId>
	      <version>2.2</version>
	    </dependency>
	     <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
          <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>1.1</version>
        </dependency>
	    <dependency>
	      <groupId>com.sparkjava</groupId>
	      <artifactId>spark-template-freemarker</artifactId>
	      <version>2.0.0</version>
	    </dependency>
	<!-- hibernate   -->
		 <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>4.0.1.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>4.2.0.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.common</groupId>
            <artifactId>hibernate-commons-annotations</artifactId>
            <version>4.0.1.Final</version>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>1.0.1.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>4.0.1.Final</version>
        </dependency>

	 	<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.3</version>
		</dependency>

		<!-- Unit Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>
		<!-- json converter -->
		<dependency>
		    <groupId>com.fasterxml.jackson.jaxrs</groupId>
		    <artifactId>jackson-jaxrs-json-provider</artifactId>
		    <version>2.5.3</version>
		</dependency>
		<!-- Spring Core -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${jcl-over-slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-orm</artifactId>
		    <version>3.1.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- jstl -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		 <dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>3.0.1</version>
		    <scope>provided</scope>
		</dependency>
		 <dependency>
		    <groupId>javax.servlet.jsp</groupId>
		    <artifactId>jsp-api</artifactId>
		    <version>2.1</version>
		    <scope>provided</scope>
		</dependency>

	<!-- 	jdbc database -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-jdbc</artifactId>
		    <version>3.0.3.RELEASE</version>
		</dependency>
		 <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
		<dependency>
	        <groupId>mysql</groupId>
	        <artifactId>mysql-connector-java</artifactId>
	        <version>5.1.15</version>
   		 </dependency>
   		 <dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>1.3.2</version>
		</dependency>
		<dependency>
		   <groupId>commons-fileupload</groupId>
		   <artifactId>commons-fileupload</artifactId>
		   <version>1.2.1</version> <!-- makesure correct version here -->
		</dependency>
		<dependency>
		    <groupId>com.google.appengine</groupId>
		    <artifactId>appengine-api-1.0-sdk</artifactId>
		    <version>1.9.19</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>eventManagement</finalName>
 <plugins>
 <!-- aspetj -->
  <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>1.4</version>
                <dependencies>
                    <!-- NB: You must use Maven 2.0.9 or above or these are ignored (see MNG-2972) -->
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjrt</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjtools</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                </dependencies>
             <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <outxml>true</outxml>
                    <aspectLibraries>
                        <aspectLibrary>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-aspects</artifactId>
                        </aspectLibrary>
                    </aspectLibraries>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <!--
                      Aspects in src/main/java and src/main/aspects are added as default in the
                      compile goal.
                      Aspects in src/test/java and src/test/aspects are added as default in the
                      test-compile goal.
                      Aspects in src/main/java are added in the test-compile goal
                      if weaveWithAspectsInMainSourceFolder is set to true
                    -->
                    <weaveWithAspectsInMainSourceFolder>false</weaveWithAspectsInMainSourceFolder>
                </configuration>
            </plugin>
 <!-- heroku app -->
		 <plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-dependency-plugin</artifactId>
		  <version>2.4</version>
		  <executions>
		    <execution>
		      <id>copy-dependencies</id>
		      <phase>package</phase>
		      <goals><goal>copy-dependencies</goal></goals>
		    </execution>
		  </executions>
		</plugin>

	      <plugin>
	        <groupId>com.heroku.sdk</groupId>
	        <artifactId>heroku-maven-plugin</artifactId>
	        <version>0.5.6</version>
	        <configuration>
			  <appName>murmuring-ravine-2713</appName>
			   <!-- <processTypes>
			     <web>java $JAVA_OPTS -cp target/classes:target/dependency/* </web>
			  </processTypes> -->
			</configuration>
	      </plugin>

		    <!-- Eclipse project -->
		  <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-eclipse-plugin</artifactId>
			<version>2.9</version>
			<configuration>
			        <!-- Always download and attach dependencies source code -->
				<downloadSources>true</downloadSources>
				<downloadJavadocs>false</downloadJavadocs>
				<!-- Avoid type mvn eclipse:eclipse -Dwtpversion=2.0 -->
				<wtpversion>2.0</wtpversion>
			</configuration>
		  </plugin>

		  <!-- Set JDK Compiler Level -->


		  <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>3.1</version>
			<configuration>
				<source>${jdk.version}</source>
				<target>${jdk.version}</target>
			</configuration>
		  </plugin>

		  <!-- For Maven Tomcat Plugin -->
		 <plugin>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-maven-plugin</artifactId>
			<version>9.1.3.v20140225</version>
		  </plugin>

		  <plugin>
			<groupId>org.apache.tomcat.maven</groupId>
			<artifactId>tomcat7-maven-plugin</artifactId>
			<version>2.0</version>
			<configuration>
						<path>/</path>
						  <update>true</update>
						<url>http://localhost:8080/</url>
						   <username>tomcat</username>
                		    <password>tomcat</password>

			</configuration>
		  </plugin>

  		<!-- <plugin>
			<groupId>org.apache.tomcat.maven</groupId>
			<artifactId>tomcat7-maven-plugin</artifactId>
			<version>7</version>
		  </plugin> -->

	      	 <!-- <plugin>
	            <groupId>com.google.appengine</groupId>
	            <artifactId>appengine-maven-plugin</artifactId>
	            <version>1.9.21</version>
	             <configuration>
		                <enableJarClasses>false</enableJarClasses>
		            </configuration>
	        </plugin> -->
	         <!-- <plugin>
	            <groupId>com.google.appengine</groupId>
	            <artifactId>appengine-maven-plugin</artifactId>
	            <version>1.9.28</version>
	            <configuration>
	              <jvmFlags>
	                <jvmFlag>-Xdebug</jvmFlag>
	                <jvmFlag>-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n</jvmFlag>
	              </jvmFlags>
	            </configuration>
	          </plugin> -->
	        <!--  <plugin>
			    <groupId>com.google.appengine</groupId>
			    <artifactId>appengine-maven-plugin</artifactId>
			    <version>1.9.21</version>
			    <configuration>
			        <jvmFlags>
			            <jvmFlag>-Xdebug</jvmFlag>
			            <jvmFlag>-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=y
			            </jvmFlag>
			        </jvmFlags>
			    </configuration>
			</plugin> -->
	        <!-- for grunt  -->
		<!-- <plugin>
			   <groupId>com.github.eirslett</groupId>
			   <artifactId>frontend-maven-plugin</artifactId>
			   <version>0.0.16</version>
		</plugin> -->
	<!-- 	<plugin>
	      <groupId>pl.allegro</groupId>
	      <artifactId>grunt-maven-plugin</artifactId>
	      <version>1.4.1</version>
	      <executions>
	        <execution>
	          <goals>
	            <goal>npm</goal>
	            <goal>grunt</goal>
	          </goals>
	        </execution>
	      </executions>
	    </plugin> -->
	       <!--   <plugin>
				  <groupId>org.codehaus.mojo</groupId>
				  <artifactId>exec-maven-plugin</artifactId>
				  <version>1.2.1</version>
				  <executions>
				    <execution>
				      <phase>prepare-package</phase>
				      <goals>
				        <goal>exec</goal>
				      </goals>
				    </execution>
				  </executions>
				  <configuration>
				    <executable>grunt</executable>
				  </configuration>
				</plugin> -->
			<plugin>
			   <groupId>pl.allegro</groupId>
			   <artifactId>grunt-maven-plugin</artifactId>
			   <version>1.5.0</version>
			   <configuration>
			       <!-- relative to src/main/webapp/, default: static -->
			       <jsSourceDirectory>src/main/webapp/app</jsSourceDirectory>

			       <!-- example options usage to get verbose output in logs -->
			       <gruntOptions>
			           <gruntOption>--verbose</gruntOption>
			       </gruntOptions>

			       <!-- example npm install env variable -->
			       <npmEnvironmentVar>
			           <PHANTOMJS_CDNURL>http://cnpmjs.org/downloads</PHANTOMJS_CDNURL>
			       </npmEnvironmentVar>

			       <!-- example options usage to filter variables in given resource -->
			       <filteredResources>
			           <filteredResource>maven-properties.json</filteredResource>
			       </filteredResources>

			   </configuration>
			   <executions>
			       <execution>
			           <goals>
			               <goal>create-resources</goal>
			               <goal>npm</goal>
			               <!-- or npm-offline if npm failure is not an option -->
			                <goal>grunt</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>
			 <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-dependency-plugin</artifactId>
              <version>2.3</version>
              <executions>
                <execution>
                  <phase>package</phase>
                  <goals>
                            <goal>copy</goal>
                        </goals>
                  <configuration>
                    <artifactItems>
                      <artifactItem>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-runner</artifactId>
                        <version>9.2.7.v20150116</version>
                        <destFileName>jetty-runner.jar</destFileName>
                      </artifactItem>
                    </artifactItems>
                  </configuration>
                </execution>
              </executions>
            </plugin>

		</plugins>

	</build>
	<distributionManagement>

		   	 <repository>
			      <id>codehausSnapshots</id>
			      <name>Codehaus Snapshots</name>
			      <url>http://snapshots.maven.codehaus.org/maven2</url>
			      <layout>default</layout>
		    </repository>

	 </distributionManagement>
	</project>